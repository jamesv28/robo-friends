{"version":3,"sources":["constants/constants.js","reducers/reducers.js","serviceWorkerRegistration.js","components/Card/card.component.jsx","components/CardList/cardlist.component.jsx","components/Header/header.component.jsx","containers/Scroll/Scroll.js","components/Errorboundary/errorboundary.component.jsx","App.js","actions/actions.js","reportWebVitals.js","index.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","initialStateRobots","isPending","robots","error","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","Card","username","name","email","className","src","alt","CardList","map","robot","id","Header","searchChange","this","props","style","textShadow","onChange","type","placeholder","Component","Scroll","overflowY","border","height","children","ErrorBoundary","hasError","err","info","setState","App","onRequestRobots","onSearchChange","filteredRobots","filter","toLowerCase","includes","role","connect","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","res","json","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","Object","assign","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"qNAAaA,EAAsB,sBACtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAwB,wBCG/BC,EAAqB,CACvBC,YAAa,IAGXC,EAAqB,CACvBC,WAAW,EACXC,OAAQ,GACRC,MAAO,I,QCDLC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACzB,GACNqB,QAAQrB,MAAM,4CAA6CA,M,6CClFlD0B,EAVF,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,MAAlB,OACT,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAAmDK,IAAKJ,IAChE,gCACI,6BAAKA,IACL,4BAAIC,WCWDI,EAfE,SAAC,GAAD,IAAElC,EAAF,EAAEA,OAAF,OACb,+BAEMA,EAAOmC,KAAI,SAAAC,GAAK,OACd,cAAC,EAAD,CAEEP,KAAMO,EAAMP,KACZD,SAAUQ,EAAMR,SAChBE,MAAOM,EAAMN,OAHRM,EAAMC,UCcVC,E,4JAlBX,WACI,IAAOC,EAAgBC,KAAKC,MAArBF,aACP,OACI,yBAAQR,UAAU,SAAlB,UACI,oBAAIA,UAAU,KAAd,SACI,wBAAQA,UAAU,KAAKW,MAAO,CAACC,WAAY,iBAA3C,4BAEJ,uBACIC,SAAUL,EACVR,UAAU,mCACVc,KAAK,SACLC,YAAY,yB,GAbXC,aCQNC,EARA,SAACP,GACZ,OACI,qBAAKC,MAAO,CAACO,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKV,EAAMW,YCsBJC,E,kDAxBX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IACDrB,MAAQ,CACTkC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAKC,GACnBhB,KAAKiB,SAAS,CACVH,UAAU,M,oBAIlB,WAEI,OADmBd,KAAKpB,MAAjBkC,SAEJ,oBAAIvB,UAAU,KAAd,0CAGCS,KAAKC,MAAMW,a,GApBKL,aCStBW,G,6KAEJ,WACElB,KAAKC,MAAMkB,oB,oBAGb,WAEE,MAAyDnB,KAAKC,MAAvD5C,EAAP,EAAOA,YAAa+D,EAApB,EAAoBA,eAAgB5D,EAApC,EAAoCA,OAAQD,EAA5C,EAA4CA,UAEtC8D,EAAiB7D,EAAO8D,QAAO,SAAA1B,GACnC,OAAOA,EAAMP,KAAKkC,cAAcC,SAASnE,EAAYkE,kBAGvD,OAAQhE,EAYN,iCACE,oBAAIgC,UAAU,KAAK,YAAU,OAAOkC,KAAK,QAAzC,0BAXF,qCACE,cAAC,EAAD,CAAQ1B,aAAcqB,IACtB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU5D,OAAQ6D,e,GApBZd,cAkDHmB,eAhBS,SAAA9C,GACtB,MAAO,CACLvB,YAAauB,EAAM+C,aAAatE,YAChCG,OAAQoB,EAAMgD,cAAcpE,OAC5BD,UAAWqB,EAAMgD,cAAcrE,UAC/BE,MAAOmB,EAAMgD,cAAcnE,UAIJ,SAACoE,GAC1B,MAAO,CACLT,eAAgB,SAACU,GAAD,OAAWD,GCjDAE,EDiDwBD,EAAME,OAAOC,MCjD3B,CACrC5B,KAAMrD,EACNkF,QAASH,KAFiB,IAACA,GDkD3BZ,gBAAiB,kBAAMU,GC7CQ,SAACA,GAChCA,EAAS,CAACxB,KAAKpD,IACfkF,MAAM,8CACH7D,MAAK,SAAA8D,GAAG,OAAIA,EAAIC,UAChB/D,MAAK,SAAAgE,GAAI,OAAIT,EAAS,CAACxB,KAAMnD,EAAwBgF,QAASI,OAC9DpD,OAAM,SAAA6B,GAAG,OAAIc,EAAS,CAACxB,KAAMlD,EAAuB+E,QAASnB,cD4CrDW,CAA6CR,GEjD7CqB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnE,MAAK,YAAkD,IAA/CoE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCMRO,EAAcC,YAAgB,CAACrB,aVGT,WAA6C,IAA5C/C,EAA2C,uDAAnCxB,EAAmB6F,EAAgB,uDAAP,GAC7D,OAAOA,EAAO5C,MACV,KAAKrD,EACD,OAAOkG,OAAOC,OAAO,GAAIvE,EAAO,CAACvB,YAAY4F,EAAOf,UACxD,QACI,OAAOtD,IURgCgD,cVYtB,WAA0C,IAAzChD,EAAwC,uDAAlCtB,EAAoB2F,EAAc,uDAAP,GAC3D,OAAOA,EAAO5C,MACV,KAAKpD,EACD,OAAOiG,OAAOC,OAAO,GAAIvE,EAAO,CAACrB,WAAW,IAChD,KAAKL,EACD,OAAOgG,OAAOC,OAAO,GAAIvE,EAAO,CAACpB,OAAQyF,EAAOf,QAAS3E,WAAW,IACxE,KAAKJ,EACD,OAAO+F,OAAOC,OAAO,GAAIvE,EAAO,CAACnB,MAAOwF,EAAOf,QAAS3E,WAAW,IACvE,QACI,OAAOqB,MUpBbwE,EAASC,yBACTC,EAAQC,YAAYR,EAAaS,YAAgBC,IAAiBL,IAExEM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,STDnB,SAAkB3F,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI2F,IAAIC,gBAAwBnG,OAAOC,SAASmG,MACpDC,SAAWrG,OAAOC,SAASoG,OAIvC,OAGFrG,OAAOsG,iBAAiB,QAAQ,WAC9B,IAAMjG,EAAK,UAAM8F,gBAAN,sBAEPrG,IAgEV,SAAiCO,EAAOC,GAEtCiE,MAAMlE,EAAO,CACXkG,QAAS,CAAE,iBAAkB,YAE5B7F,MAAK,SAAC8F,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CrG,UAAUC,cAAcqG,MAAMnG,MAAK,SAACC,GAClCA,EAAamG,aAAapG,MAAK,WAC7BV,OAAOC,SAAS8G,eAKpB3G,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFV6F,CAAwB3G,EAAOC,GAI/BC,UAAUC,cAAcqG,MAAMnG,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OSrB/B2G,GAEAtC,M","file":"static/js/main.9eb546b9.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import {CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING, \n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from '../constants/constants';\n\nconst initialStateSearch = {\n    searchField: ''\n}\n\nconst initialStateRobots = {\n    isPending: false,\n    robots: [],\n    error: ''\n}\n\nexport const searchRobots = (state = initialStateSearch,action = {}) => {\n    switch(action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, {searchField:action.payload})\n        default:\n            return state\n    }\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n    switch(action.type) {\n        case REQUEST_ROBOTS_PENDING: \n            return Object.assign({}, state, {isPending: true})\n        case REQUEST_ROBOTS_SUCCESS:\n            return Object.assign({}, state, {robots: action.payload, isPending: false});\n        case REQUEST_ROBOTS_FAILED:\n            return Object.assign({}, state, {error: action.payload, isPending: false});\n        default: \n            return state;\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst Card = ({username, name, email}) => (\n    <div className=\"bg-light-green dib pa3 ma2 grow bw2 shadow-5 tc\" >\n        <img src={`https://robohash.org/${username}?size=200x200`} alt={name}/>\n        <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n    </div>\n)\n\nexport default Card;","import React from 'react';\nimport Card from '../Card/card.component';\n\nconst CardList = ({robots}) => (\n    <main>\n        {\n          robots.map(robot => (\n            <Card\n              key={robot.id}\n              name={robot.name}\n              username={robot.username}\n              email={robot.email}\n            />\n          ))\n        }\n    </main>\n)\n\nexport default CardList","import React, { Component } from 'react'\n\nclass Header extends Component {\n\n    render() {\n        const {searchChange} = this.props;\n        return (\n            <header className=\"pa2 tc\">\n                <h1 className=\"tc\">\n                    <strong className=\"f1\" style={{textShadow: '2px 2px white'}}>ROBO FRIENDS</strong>\n                </h1>\n                <input \n                    onChange={searchChange}\n                    className=\"pa3 ba b--green bg-lightest-blue\" \n                    type=\"search\" \n                    placeholder=\"Search Robots\" \n                />\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '600px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        } \n    }\n\n    componentDidCatch(err, info) {\n        this.setState({\n            hasError: true\n        })\n    }\n\n    render() {\n        const {hasError} = this.state;\n        return hasError ? (\n           <h1 className=\"tc\">Oops... Something went wrong</h1> \n        ) : \n        (\n            this.props.children\n        )\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {setSearchField, requestRobots} from './actions/actions';\n\nimport CardList from './components/CardList/cardlist.component';\nimport Header from './components/Header/header.component';\nimport Scroll from './containers/Scroll/Scroll';\nimport ErrorBoundary from './components/Errorboundary/errorboundary.component';\n\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n\n    const {searchField, onSearchChange, robots, isPending} = this.props;\n\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase())\n    });\n\n    return !isPending ?\n    (\n      <>\n        <Header searchChange={onSearchChange} />\n        <Scroll>\n          <ErrorBoundary>\n            <CardList robots={filteredRobots}/>\n          </ErrorBoundary>\n        </Scroll>\n      </>\n     ) :\n     (\n      <header>\n        <h1 className=\"tc\" aria-busy=\"true\" role=\"alert\">Loading...</h1>\n      </header>\n     ) \n\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from '../constants/constants';\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n});\n\nexport const requestRobots = () => (dispatch) => {\n    dispatch({type:REQUEST_ROBOTS_PENDING })\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\n      .catch(err => dispatch({type: REQUEST_ROBOTS_FAILED, payload: err}))\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {searchRobots, requestRobots} from './reducers/reducers';\nimport {createLogger} from 'redux-logger';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootReducer = combineReducers({searchRobots, requestRobots});\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}